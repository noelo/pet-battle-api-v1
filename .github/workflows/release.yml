on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'RELEASE*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          architecture: x64  
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build and Publish
        # Yes we need to enable tests once the DB prerequisites are fixed
        run: mvn -B package -DskipTests --file pom.xml       
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          localJAR: target/pet-battle-api-1.0-SNAPSHOT-runner.jar
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. 
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./target/pet-battle-api-1.0-SNAPSHOT-runner.jar
          asset_name: pet-battle-api-1.0-SNAPSHOT-runner.jar
          asset_content_type: application/zip